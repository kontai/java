import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import com.itbaizhan.mapper.UserMapper;
import com.itbaizhan.pojo.User;
import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

public class TestUserMapper {
    InputStream is = null;
    SqlSession session = null;
    UserMapper userMapper = null;

    @Before
    public void before() throws IOException {
        is = Resources.getResourceAsStream("SqlMapConfig.xml");
        SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
        SqlSessionFactory factory = builder.build(is);
        session = factory.openSession();
        userMapper = session.getMapper(UserMapper.class);
    }

    @After
    public void after() throws IOException {
        session.close();
        is.close();
    }

    @Test
    public void testFindAll() {
        List<User> all = userMapper.findAll();
        all.forEach(System.out::println);
    }

    // 测试分页插件
    @Test
    public void testFindPage(){
        // 1.设置分页参数 参数一：页数，从1开始。参数二：每页条数
        PageHelper.startPage(2,3);
        // 2.正常查询
        List<User> all = userMapper.findAll();
        // 3.封装查询结果，生成页面对象
        PageInfo pageInfo = new PageInfo(all);
        // 4.打印页面对象的属性
        System.out.println("结果集:"+pageInfo.getList());
        System.out.println("总条数:"+pageInfo.getTotal());
        System.out.println("总页数:"+pageInfo.getPages());
        System.out.println("当前页:"+pageInfo.getPageNum());
        System.out.println("每页条数:"+pageInfo.getSize());
    }

    @Test
    public void testFindById() {
        User user = userMapper.findById(1);
        System.out.println(user);
    }


    @Test
    public void testAdd() {
        User user = new User("北京程序员", "女", "朝阳区");
        System.out.println(user);
        userMapper.add(user);
        session.commit();
        System.out.println(user);
    }

    @Test
    public void testUpdate() {
        User user = new User(14, "上海程序员", "女", "黄浦区");
        userMapper.update(user);
        session.commit();
    }

    @Test
    public void testDelete() {
        userMapper.delete(15);
        session.commit();
    }

    @Test
    public void testFindByUsername() {
        List<User> all = userMapper.findByUsernameLike("%北京%");
        all.forEach(System.out::println);
    }

    @Test
    public void testFindByCondition() {
        User user = new User();
        user.setUsername("%北京%");

        List<User> all = userMapper.findByCondition(user);
        all.forEach(System.out::println);
    }


}
